version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-quizdb}
      - POSTGRES_USER=${DB_USERNAME:-dbuser}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-dbpass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-dbuser} -d ${POSTGRES_DB:-quizdb}"]
      interval: 10s
      timeout: 5s
      retries: 5

  spring-backend:
    # For production: use pre-built image from Docker Hub
    # For local: build from source
    image: ${DOCKER_IMAGE:-nghood-christianity-backend}
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB:-quizdb}
      - DB_USERNAME=${DB_USERNAME:-dbuser}
      - DB_PASSWORD=${DB_PASSWORD:-dbpass}
      - API_SECRET=${API_SECRET:-dev-secret-123}
      - JPA_DDL_AUTO=${JPA_DDL_AUTO:-update}
      - JPA_SHOW_SQL=${JPA_SHOW_SQL:-false}
      - DATA_PATH=/app/data/
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/data:/app/data
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      # Frontend files
      - ${FRONTEND_PATH:-./docs}:/usr/share/nginx/html:ro
      # Nginx config - use nginx.local.conf for local dev, nginx.conf for production
      - ./nginx/${NGINX_CONFIG_FILE:-nginx.local.conf}:/etc/nginx/conf.d/default.conf:ro
      # SSL certificates (optional for production)
      - ${SSL_CERTS:-./nginx/ssl}:/etc/nginx/ssl:ro
    depends_on:
      - spring-backend
    restart: unless-stopped

volumes:
  postgres_data: